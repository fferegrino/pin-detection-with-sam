<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Enamel Pin Collection</title>
  <style>
body, html {
    height: 100%;
    margin: 0;
    /* overflow: hidden; */
}

.magnifier-container {
    position: relative;
    width: 100%;
    height: 100%;
}

#canvasMapContainer {
    width: 100%;
    height: auto;
    display: block;
}

#info {
    position: absolute;
    top: 0;
    left: 0;
}

#info > article {
  margin-bottom: 0;
}
  </style>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" />
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/es6-promise/dist/es6-promise.auto.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/imagemapster/1.8.0/jquery.imagemapster.min.js" integrity="sha512-18b1YKEQCvv8P4pvvf1lFmJIYLjU6gqzz8Cw+J/Q5lFL5bf56QtK8xMLH/7Vvv+FGRxscyeP7G5pq2AgtQEyAA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body>

  <div class="magnifier-container">
      <img src="{{image}}" alt="Enamel Pins Collection" id="canvasMapContainer" usemap="#pinmap">
  </div>
  <map name="pinmap" id="pinmap">
      {%- for cutout in existing_cutouts %}
      <area shape="poly" coords="{{cutout.polygon | join(',')}}" 
        data-name="{{cutout.name}}"

        {%- if cutout.description %}
        data-description="{{cutout.description}}"
        {%- endif %}
        alt="{{cutout.name}}" data-key="{{cutout.uuid}}" href="#">
      {%- endfor %}
  </map>

  <!-- Modal -->
  <dialog id="modal">
    <article>
      <header>
          <h3 id="infoPinNameModal"></h3>
      </header>
      <p id="infoPinDescriptionModal"></p>
    </article>
  </dialog>

  <!-- Tooltip -->
  <div id="info" style="display: none;">
    <article>
      <header><h3 id="infoPinNameTooltip"></h3></header>
      <p id="infoPinDescriptionTooltip" style="display: none;"></p>
    </article>
  </div>

  <script>
$(document).ready(function() {
    const $modal = $("#modal");
    const isOpenClass = "modal-is-open";
    const openingClass = "modal-is-opening";
    const closingClass = "modal-is-closing";
    const scrollbarWidthCssVar = "--pico-scrollbar-width";
    const animationDuration = 400; // ms
    let visibleModal = null;
    const buffer = 10;

    const $info = $("#info");
    const $infoPinNameTooltip = $("#infoPinNameTooltip");
    const $infoPinNameModal = $("#infoPinNameModal");
    const $canvasMapContainer = $("#canvasMapContainer");

    // Toggle modal
    const toggleModal = () => {
        if (!$modal.length) return;
        $modal[0].open ? closeModal() : openModal();
    };

    // Open modal
    const openModal = () => {
        $("html").addClass(isOpenClass).addClass(openingClass);
        setTimeout(() => {
            visibleModal = $modal;
            $("html").removeClass(openingClass);
        }, animationDuration);
        $modal[0].showModal();
    };

    // Close modal
    const closeModal = () => {
        visibleModal = null;
        $("html").addClass(closingClass);
        setTimeout(() => {
            $("html").removeClass(closingClass).removeClass(isOpenClass);
            $("html").css(scrollbarWidthCssVar, '');
            $modal[0].close();
        }, animationDuration);
    };

    // Close with a click outside
    $(document).on("click", (event) => {
        if (visibleModal === null) return;
        const isClickInside = $(visibleModal).find("article").has(event.target).length > 0;
        if (!isClickInside) closeModal();
    });

    // Close with Esc key
    $(document).on("keydown", (event) => {
        if (event.key === "Escape" && visibleModal) {
            closeModal();
        }
    });

    $canvasMapContainer.mapster({
        enableAutoResizeSupport: true,
        autoResize: true,
        isSelectable: false,
        stroke: false,
        strokeColor: '00FF00',
        strokeWidth: 5,
        mapKey: 'data-key',
        fillOpacity: 0.0,
        onClick: function (data) {
            $infoPinNameModal.text(data.e.target.dataset.name);
            toggleModal();
        },
        onMouseout: function() {
            $info.hide();
        },
        onMouseover: function(data) {
            const coords = $(this).attr('coords').split(',').map(coord => parseInt(coord, 10));
            const xCoords = coords.filter((_, i) => i % 2 === 0);
            const yCoords = coords.filter((_, i) => i % 2 === 1);
            const x1 = Math.min(...xCoords);
            const y1 = Math.min(...yCoords);
            const x2 = Math.max(...xCoords);
            const y2 = Math.max(...yCoords);
            const centerX = (x1 + x2) / 2;

            $infoPinNameTooltip.text(data.e.target.dataset.name);

            const infoWidth = $info.width();
            const infoHeight = $info.height();

            let positionX = "centre";
            if (x1 - infoWidth - buffer < 0) {
                positionX = "left";
            } else if (x2 + infoWidth + buffer > $canvasMapContainer.width()) {
                positionX = "right";
            }

            let positionY = "top";
            if (y1 - infoHeight - buffer < $(window).scrollTop()) {
                positionY = "bottom";
            }

            const positionXmap = {
                "left": x2 + buffer,
                "centre": centerX - infoWidth / 2,
                "right": x1 - infoWidth - buffer
            };

            const positionYmap = {
                "top": y1 - buffer - infoHeight,
                "bottom": y2 + buffer
            };

            $info.css({
                top: positionYmap[positionY],
                left: positionXmap[positionX],
                boxShadow: "0px 0px 84px 0px rgba(0, 0, 0, 0.80)"
            }).show();
        }
    }).mapster('set', true, 'all');
});

</script>
</body>
</html>
